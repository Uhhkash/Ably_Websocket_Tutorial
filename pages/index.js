import Head from 'next/head';
import Image from 'next/image';
import ablyLogo from '../public/ably-logo.svg';
import styles from '../styles/Home.module.css';
import Participants from '../components/Participants';
import Articles from '../components/Articles';
import { getHistoricalMessages } from '../lib/history';

export default function Home(props) {
  const handleEventClick = async (eventType, eventText) => {
    try {
      const response = await fetch('/api/publish', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ type: eventType, text: eventText }),
      });

      if (!response.ok) {
        console.error(`Failed to publish ${eventType}:`, await response.text());
      }
    } catch (error) {
      console.error(`Error publishing ${eventType}:`, error);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Chaos Engine</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://static.ably.dev/motif-red.svg?realtime-news" type="image/svg+xml" />
      </Head>

      <main className={styles.main}>
        <Image alt="ably logo" src={ablyLogo} width="160px" height="100%" />
        <h1>Chaos Engine</h1>
        <h3>Participants</h3>
        <Participants />
        <Articles history={props.history} />
      </main>

      <div className={styles.sidebar}>
        <button
          className={styles.button}
          onClick={() => handleEventClick('event-2', 'This is a permanent text box for Event 2!')}
        >
          Event 2
        </button>
        <button
          className={styles.button}
          onClick={() => handleEventClick('event-3', 'This is a permanent text box for Event 3!')}
        >
          Event 3
        </button>
        <button
          className={styles.button}
          onClick={() => handleEventClick('event-4', 'This is a permanent text box for Event 4!')}
        >
          Event 4
        </button>
      </div>
    </div>
  );
}

export async function getStaticProps() {
  const historicalMessages = await getHistoricalMessages();

  return {
    props: {
      history: historicalMessages || [],
    },
    revalidate: 10,
  };
}
